{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/MY-Projects/coures-next/e-commerce-ui/src/app/products/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Minus, Plus, ShoppingCart } from \"lucide-react\";\r\nimport useCartStore from \"@/app/store/cart\";\r\nimport { Product } from \"@/app/types/product\";\r\nimport { toast } from \"react-toastify\";\r\nimport Image from \"next/image\";\r\nimport { usePathname, useRouter, useSearchParams } from \"next/navigation\";\r\n\r\nconst product: Product = {\r\n  id: 1,\r\n  name: \"Adidas CoreFit T-Shirt\",\r\n  shortDescription: \"راحة وأناقة بأحدث تكنولوجيا الجري.\",\r\n  description:\r\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n  price: 59.9,\r\n  sizes: [\"XS\", \"S\", \"M\", \"L\", \"XL\"],\r\n  colors: [\"gray\", \"purple\", \"green\"],\r\n  images: {\r\n    gray: \"/products/7g.png\",\r\n    purple: \"/products/7p.png\",\r\n    green: \"/products/7g.png\", // Using same image for demo\r\n  },\r\n};\r\nconst ProductDetails = ({\r\n  params,\r\n  searchParams,\r\n}: {\r\n  params: { id: string };\r\n  searchParams: { color: string; size: string };\r\n}) => {\r\n  const { size, color } = await searchParams;\r\n  const selectedSize = size || product.sizes[0];\r\n  const selectedColor = color || product.colors[0];\r\n\r\n  // const handleAddToCart = () => {\r\n  //   addToCart({\r\n  //     ...product,\r\n  //     quantity,\r\n  //     selectedSize,\r\n  //     selectedColor,\r\n  //   });\r\n  //   toast.success(\"Product added to cart\");\r\n  // };\r\n\r\n  const handleBuyNow = () => {\r\n    // handleAddToCart();\r\n    // Redirect to checkout or cart page\r\n  };\r\n\r\n  // const handleChangeQuantity = (type: \"increase\" | \"decrease\") => {\r\n  //   if (type === \"increase\") {\r\n  //     setQuantity((prev) => prev + 1);\r\n  //   } else {\r\n  //     setQuantity((prev) => Math.max(1, prev - 1));\r\n  //   }\r\n  // };\r\n\r\n  const colorMap = {\r\n    gray: \"#4B5563\",\r\n    purple: \"#8B5CF6\",\r\n    green: \"#10B981\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col lg:flex-row gap-4  md:gap-12 mt-12\">\r\n      {/* Left Side - Product Image */}\r\n      <div className=\"flex justify-center lg:justify-start w-full lg:w-5/12\">\r\n        <div className=\"relative  w-[500px] h-[500px]\">\r\n          <Image\r\n            src={product.images[selectedColor]}\r\n            alt={product.name}\r\n            className=\"w-full max-w-md h-auto object-cover rounded-lg\"\r\n            fill\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right Side - Product Details */}\r\n      {/* <div className=\"space-y-8 w-full lg:w-7/12\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900\">{product.name}</h1>\r\n\r\n        <p className=\"text-gray-600 leading-relaxed\">{product.description}</p>\r\n\r\n        <div className=\"text-3xl font-bold text-gray-900\">\r\n          ${product.price.toFixed(2)}\r\n        </div>\r\n\r\n        <div className=\"space-y-3\">\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            Size\r\n          </label>\r\n          <div className=\"flex gap-3\">\r\n            {product.sizes.map((size) => (\r\n              <button\r\n                key={size}\r\n                onClick={() => setSelectedSize(size)}\r\n                className={`px-4 py-2 border rounded-md text-sm font-medium transition-colors ${\r\n                  selectedSize === size\r\n                    ? \"bg-gray-900 text-white border-gray-900\"\r\n                    : \"bg-white text-gray-900 border-gray-300 hover:border-gray-900\"\r\n                }`}\r\n              >\r\n                {size}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-3\">\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            Color\r\n          </label>\r\n          <div className=\"flex gap-3\">\r\n            {product.colors.map((color) => (\r\n              <button\r\n                key={color}\r\n                onClick={() => setSelectedColor(color)}\r\n                className={`w-8 h-8 rounded-full border-2 transition-all ${\r\n                  selectedColor === color\r\n                    ? \"border-gray-900 scale-110\"\r\n                    : \"border-gray-300 hover:border-gray-600\"\r\n                }`}\r\n                style={{\r\n                  backgroundColor: colorMap[color as keyof typeof colorMap],\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-3\">\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            Quantity\r\n          </label>\r\n          <div className=\"flex items-center border border-gray-300 rounded-md w-fit\">\r\n            <button\r\n              onClick={() => handleChangeQuantity(\"decrease\")}\r\n              className=\"px-3 py-2 text-gray-600 hover:text-gray-900 transition-colors\"\r\n            >\r\n              <Minus size={16} />\r\n            </button>\r\n            <span className=\"px-4 py-2 text-gray-900 font-medium min-w-[3rem] text-center\">\r\n              {quantity}\r\n            </span>\r\n            <button\r\n              onClick={() => handleChangeQuantity(\"increase\")}\r\n              className=\"px-3 py-2 text-gray-600 hover:text-gray-900 transition-colors\"\r\n            >\r\n              <Plus size={16} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <button\r\n            onClick={handleAddToCart}\r\n            className=\"w-full bg-gray-900 text-white py-4 px-6 rounded-md font-medium flex items-center justify-center gap-2 hover:bg-gray-800 transition-colors\"\r\n          >\r\n            <Plus size={20} />\r\n            Add to Cart\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleBuyNow}\r\n            className=\"w-full bg-white text-gray-900 py-4 px-6 rounded-md font-medium border border-gray-300 flex items-center justify-center gap-2 hover:border-gray-900 transition-colors\"\r\n          >\r\n            <ShoppingCart size={20} />\r\n            Buy this Item\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-4\">\r\n          <Image\r\n            src=\"/klarna.png\"\r\n            alt=\"Klarna\"\r\n            className=\"h-8 w-8\"\r\n            width={32}\r\n            height={32}\r\n          />\r\n          <div className=\"flex items-center gap-1\">\r\n            <div className=\"w-8 h-5 bg-orange-500 rounded-l-full\"></div>\r\n            <div className=\"w-8 h-5 bg-red-500 rounded-r-full\"></div>\r\n            <span className=\"ml-2 text-sm font-medium\">Mastercard</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-1\">\r\n            <div className=\"w-8 h-5 bg-blue-600 rounded\"></div>\r\n            <span className=\"ml-2 text-sm font-medium\">VISA</span>\r\n          </div>\r\n          <Image\r\n            src=\"/stripe.png\"\r\n            alt=\"Stripe\"\r\n            className=\"h-8 w-8\"\r\n            width={32}\r\n            height={32}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"text-xs text-gray-500 leading-relaxed\">\r\n          By clicking Pay Now, you agree to our{\" \"}\r\n          <a href=\"#\" className=\"underline hover:text-gray-700\">\r\n            Terms & Conditions\r\n          </a>{\" \"}\r\n          and{\" \"}\r\n          <a href=\"#\" className=\"underline hover:text-gray-700\">\r\n            Privacy Policy\r\n          </a>\r\n          . You authorize us to charge your selected payment method for the\r\n          total amount shown. All sales are subject to our{\" \"}\r\n          <a href=\"#\" className=\"underline hover:text-gray-700\">\r\n            return and Refund Policies\r\n          </a>\r\n          .\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n"],"names":[],"mappings":";;;;AAMA;AANA;;;AASA,MAAM,UAAmB;IACvB,IAAI;IACJ,MAAM;IACN,kBAAkB;IAClB,aACE;IACF,OAAO;IACP,OAAO;QAAC;QAAM;QAAK;QAAK;QAAK;KAAK;IAClC,QAAQ;QAAC;QAAQ;QAAU;KAAQ;IACnC,QAAQ;QACN,MAAM;QACN,QAAQ;QACR,OAAO;IACT;AACF;AACA,MAAM,iBAAiB;QAAC,EACtB,MAAM,EACN,YAAY,EAIb;IACC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM;IAC9B,MAAM,eAAe,QAAQ,QAAQ,KAAK,CAAC,EAAE;IAC7C,MAAM,gBAAgB,SAAS,QAAQ,MAAM,CAAC,EAAE;IAEhD,kCAAkC;IAClC,gBAAgB;IAChB,kBAAkB;IAClB,gBAAgB;IAChB,oBAAoB;IACpB,qBAAqB;IACrB,QAAQ;IACR,4CAA4C;IAC5C,KAAK;IAEL,MAAM,eAAe;IACnB,qBAAqB;IACrB,oCAAoC;IACtC;IAEA,oEAAoE;IACpE,+BAA+B;IAC/B,uCAAuC;IACvC,aAAa;IACb,oDAAoD;IACpD,MAAM;IACN,KAAK;IAEL,MAAM,WAAW;QACf,MAAM;QACN,QAAQ;QACR,OAAO;IACT;IAEA,qBACE,6LAAC;QAAI,WAAU;kBAEb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;oBACJ,KAAK,QAAQ,MAAM,CAAC,cAAc;oBAClC,KAAK,QAAQ,IAAI;oBACjB,WAAU;oBACV,IAAI;;;;;;;;;;;;;;;;;;;;;AAgJhB;KAjMM;uCAmMS","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///D:/MY-Projects/coures-next/e-commerce-ui/node_modules/next/src/shared/lib/image-external.tsx"],"sourcesContent":["import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n"],"names":["getImageProps","imgProps","props","getImgProps","defaultLoader","imgConf","process","env","__NEXT_IMAGE_OPTS","key","value","Object","entries","undefined","Image"],"mappings":"AAoBaM,QAAQC,GAAG,CAACC,iBAAiB;;;;;;;;;;;;;;;;IAa1C,OAAoB,EAAA;eAApB;;IAjBgBR,aAAa,EAAA;eAAbA;;;;6BAbY;gCACN;sEAGI;AASnB,SAASA,cAAcC,QAAoB;IAChD,MAAM,EAAEC,KAAK,EAAE,GAAGC,CAAAA,GAAAA,aAAAA,WAAW,EAACF,UAAU;QACtCG,eAAAA,aAAAA,OAAa;QACb,4CAA4C;QAC5CC,OAAAA;IACF;IACA,uEAAuE;IACvE,wEAAwE;IACxE,wDAAwD;IACxD,KAAK,MAAM,CAACI,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACV,OAAQ;QAChD,IAAIQ,UAAUG,WAAW;YACvB,OAAOX,KAAK,CAACO,IAA0B;QACzC;IACF;IACA,OAAO;QAAEP;IAAM;AACjB;MAEA,WAAeY,gBAAAA,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///D:/MY-Projects/coures-next/e-commerce-ui/node_modules/next/image.js"],"sourcesContent":["module.exports = require('./dist/shared/lib/image-external')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}